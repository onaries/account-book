buildscript {
    ext {
        queryDslVersion = "5.0.0"
        kotlinVersion = '1.6.21'
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.flywaydb.flyway" version "9.10.2"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "org.jetbrains.kotlin.kapt" version "1.8.0"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.8.0"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.8.0"
}

apply plugin: "kotlin"
apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: 'kotlin-kapt'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "17"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // https://mvnrepository.com/artifact/org.flywaydb/flyway-core
    implementation 'org.flywaydb:flyway-core:9.10.2'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
//    testImplementation 'org.springframework.security:spring-security-test:6.0.1'
    implementation "org.flywaydb:flyway-mysql:9.10.2"
    implementation 'org.telegram:telegrambots-spring-boot-starter:6.4.0'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation("com.github.seratch:notion-sdk-jvm-core:1.7.2")

    // https://mvnrepository.com/artifact/org.openapitools/jackson-databind-nullable
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    compileOnly 'com.fasterxml.jackson.module:jackson-module-kotlin'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly "org.jetbrains.kotlin:kotlin-reflect"
}

tasks.named('test') {
    useJUnitPlatform()
}


/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "17"
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

noArg {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}


targetCompatibility = JavaVersion.VERSION_17
